name: linting, testing, building
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  install_dependencies:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3
      - name: Staring Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
            # A list of files, directories, and wildcard patterns to cache and restore
          path: ~/.npm
            # An explicit key for restoring and saving the cache
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/package-lock.json')) }}
      - name: npm settings
        run: npm config set legacy-peer-deps true
      - name: install modules
        run: npm install
  linting:
    needs: [  install_dependencies ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 18.x ]
    steps:
      - uses: actions/checkout@v3
      - name: Staring Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          # A list of files, directories, and wildcard patterns to cache and restore
          path: ~/.npm
          # An explicit key for restoring and saving the cache
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/package-lock.json')) }}
      - name: npm settings
        run: npm config set legacy-peer-deps true
      - name: install modules
        run: npm install
      - name: lint scripts
        run: npm run lint:ts:fix
      - name: lint styles
        run: npm run lint:ts:fix
  storybook:
    needs: [  install_dependencies ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 18.x ]
    steps:
      - uses: actions/checkout@v3
      - name: Staring Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          # A list of files, directories, and wildcard patterns to cache and restore
          path: ~/.npm
          # An explicit key for restoring and saving the cache
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/package-lock.json')) }}
      - name: npm settings
        run: npm config set legacy-peer-deps true
      - name: install modules
        run: npm install
      - name: build storybook
        if: always()
        run: npm run storybook:build
  tests:
    needs: [  install_dependencies ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 18.x ]
    steps:
      - uses: actions/checkout@v3
      - name: Staring Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          # A list of files, directories, and wildcard patterns to cache and restore
          path: ~/.npm
          # An explicit key for restoring and saving the cache
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/package-lock.json')) }}
      - name: npm settings
        run: npm config set legacy-peer-deps true
      - name: install modules
        run: npm install
      - name: unit tests
        if: always()
        run: npm run test:unit
  build:
    needs: [  install_dependencies,   linting,   tests]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 18.x ]
    steps:
      - uses: actions/checkout@v3
      - name: Staring Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          # A list of files, directories, and wildcard patterns to cache and restore
          path: ~/.npm
          # An explicit key for restoring and saving the cache
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/package-lock.json')) }}
      - name: npm settings
        run: npm config set legacy-peer-deps true
      - name: install modules
        run: npm install
      - name: build
        run: npm run build:prod

